// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using day2.Models;

namespace day2.Migrations
{
    [DbContext(typeof(ItiSystem))]
    [Migration("20220213174200_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("day2.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dept_Id")
                        .HasColumnType("int");

                    b.Property<int>("min_Degree")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dept_Id");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("day2.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("day2.Models.Instuctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("crs_Id")
                        .HasColumnType("int");

                    b.Property<int>("dept_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("crs_Id");

                    b.HasIndex("dept_Id");

                    b.ToTable("instuctors");
                });

            modelBuilder.Entity("day2.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dept_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dept_Id");

                    b.ToTable("trainee");
                });

            modelBuilder.Entity("day2.Models.crsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("crs_ID")
                        .HasColumnType("int");

                    b.Property<int>("trainee_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("crs_ID");

                    b.HasIndex("trainee_ID");

                    b.ToTable("crsResults");
                });

            modelBuilder.Entity("day2.Models.Course", b =>
                {
                    b.HasOne("day2.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("day2.Models.Instuctor", b =>
                {
                    b.HasOne("day2.Models.Course", "Course")
                        .WithMany("Instuctors")
                        .HasForeignKey("crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("day2.Models.Department", "Department")
                        .WithMany("Instuctors")
                        .HasForeignKey("dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("day2.Models.Trainee", b =>
                {
                    b.HasOne("day2.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("day2.Models.crsResult", b =>
                {
                    b.HasOne("day2.Models.Course", "Course")
                        .WithMany("crsResults")
                        .HasForeignKey("crs_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("day2.Models.Trainee", "Trainee")
                        .WithMany("crsResults")
                        .HasForeignKey("trainee_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("day2.Models.Course", b =>
                {
                    b.Navigation("crsResults");

                    b.Navigation("Instuctors");
                });

            modelBuilder.Entity("day2.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instuctors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("day2.Models.Trainee", b =>
                {
                    b.Navigation("crsResults");
                });
#pragma warning restore 612, 618
        }
    }
}
